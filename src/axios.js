// src/axios.js
import axios from "axios";

const api = axios.create({
  baseURL: "http://localhost:8080",
  headers: {
    "Content-Type": "application/json",
  },
  withCredentials: true, // cho ph√©p g·ª≠i cookie n·∫øu backend h·ªó tr·ª£
});

// ==== REQUEST INTERCEPTOR ====
api.interceptors.request.use(
  (config) => {
    const token = localStorage.getItem("accessToken");

    if (token) {
      config.headers.Authorization = `Bearer ${token.trim()}`;
    }

    // Debug request
    console.groupCollapsed("üöÄ API Request");
    console.log("URL:", `${config.baseURL}${config.url}`);
    console.log("Method:", config.method?.toUpperCase());
    console.log("Authorization:", !!token ? "Bearer ***" : "None");
    console.groupEnd();

    return config;
  },
  (error) => {
    console.error("‚ùå Request error:", error);
    return Promise.reject(error);
  }
);

// ==== RESPONSE INTERCEPTOR ====
api.interceptors.response.use(
  (response) => {
    // Debug response
    console.groupCollapsed("üì© API Response");
    console.log("URL:", `${response.config.baseURL}${response.config.url}`);
    console.log("Status:", response.status);
    console.log("Data:", response.data);
    console.groupEnd();
    return response;
  },
  (error) => {
    console.groupCollapsed("‚ùå API Response Error");
    console.log("URL:", error.config?.url);
    console.log("Status:", error.response?.status);
    console.log("Data:", error.response?.data);
    console.groupEnd();

    if (error.response?.status === 401) {
      console.warn(
        "‚ö†Ô∏è Unauthorized (401) - Phi√™n c√≥ th·ªÉ h·∫øt h·∫°n ho·∫∑c token kh√¥ng h·ª£p l·ªá."
      );
      // ‚ùå Kh√¥ng x√≥a token t·ª± ƒë·ªông ·ªü ƒë√¢y
      // ‚úÖ X·ª≠ l√Ω redirect ·ªü t·∫ßng cao h∆°n (App.jsx / Auth wrapper)
    }

    return Promise.reject(error);
  }
);

export default api;
